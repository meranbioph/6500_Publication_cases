#!/bin/sh
cd ${0%/*} || exit 1  # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

###############################
# Allrun for clamp_80
# This is a Shell script, so it uses # to comment out text
# to make this an exectuable file, in Shell in the case directory, run: chmod +x Allrun
# run the Allrun file, in Shell in the case directory, run: ./Allrun
# The first line of this file tells Ubunutu to run the shell, I think.
# The second line sets the working directory
###############################
# set up the cases

cp -r ./clamp_80_01/0_orig ./clamp_80_01/clamp_80_01_ltr/0
cp -r ./clamp_80_01/0_orig ./clamp_80_01/clamp_80_01_rtl/0
cp -r ./clamp_80_02/0_orig ./clamp_80_02/clamp_80_02_ltr/0
cp -r ./clamp_80_02/0_orig ./clamp_80_02/clamp_80_02_rtl/0

runApplication blockMesh -case ./clamp_80_01
rm ./log.blockMesh
runApplication blockMesh -case ./clamp_80_01/clamp_80_01_ltr
rm ./log.blockMesh
runApplication blockMesh -case ./clamp_80_01/clamp_80_01_rtl
rm ./log.blockMesh
runApplication blockMesh -case ./clamp_80_02
rm ./log.blockMesh
runApplication blockMesh -case ./clamp_80_02/clamp_80_02_ltr
rm ./log.blockMesh
runApplication blockMesh -case ./clamp_80_02/clamp_80_02_rtl
rm ./log.blockMesh
runApplication topoSet -case ./clamp_80_01
rm ./log.topoSet
runApplication topoSet -case ./clamp_80_01/clamp_80_01_ltr
rm ./log.topoSet
runApplication topoSet -case ./clamp_80_01/clamp_80_01_rtl
rm ./log.topoSet
runApplication topoSet -case ./clamp_80_02
rm ./log.topoSet
runApplication topoSet -case ./clamp_80_02/clamp_80_02_ltr
rm ./log.topoSet
runApplication topoSet -case ./clamp_80_02/clamp_80_02_rtl
rm ./log.topoSet
runApplication setFields -case ./clamp_80_02
rm ./log.setFields
runApplication setFields -case ./clamp_80_02/clamp_80_02_ltr
rm ./log.setFields
runApplication setFields -case ./clamp_80_02/clamp_80_02_rtl
rm ./log.setFields

###############################
# Prepare a U & p field for when U inlet = 0
cp -r ./clamp_80_01/system/controlDict_zero ./clamp_80_01/clamp_80_01_ltr/system/controlDict
rm ./clamp_80_01/clamp_80_01_ltr/0/U
mv ./clamp_80_01/clamp_80_01_ltr/0/U_zero ./clamp_80_01/clamp_80_01_ltr/0/U
runApplication pimpleFoam -case ./clamp_80_01/clamp_80_01_ltr
mv ./clamp_80_01/clamp_80_01_ltr/900 ./clamp_80_01/zero
rm ./log.pimpleFoam

###############################
# first loop of the paired cases
# CURRENTLY ASSUMES FIRST IS RIGHT-TO-LEFT: Ensure blockMeshDict in clamp_80_01/system matches this (take from _80_01_ltr or _80_01_rtl)

wtw="rtl"
cp -r ./clamp_80_01/system/controlDict_start ./clamp_80_01/clamp_80_01_"$wtw"/system/controlDict
runApplication pimpleFoam -case ./clamp_80_01/clamp_80_01_"$wtw"
rm ./clamp_80_01/clamp_80_01_"$wtw"/system/controlDict
rm ./log.pimpleFoam
rm -r ./clamp_80_01/clamp_80_01_"$wtw"/0
cp -r ./clamp_80_01/system/controlDict ./clamp_80_01/clamp_80_01_"$wtw"/system/controlDict
runApplication pimpleFoam -case ./clamp_80_01/clamp_80_01_"$wtw"

mv ./clamp_80_01/clamp_80_01_"$wtw"/90 ./clamp_80_01/0
rm -r ./clamp_80_01/clamp_80_01_"$wtw"/1

runApplication mapFields -case ./clamp_80_02/clamp_80_02_"$wtw" -consistent ./clamp_80_01

cp ./clamp_80_01/0/phi ./clamp_80_02/clamp_80_02_"$wtw"/0/phi

runApplication clampPimpleFoam -case ./clamp_80_02/clamp_80_02_"$wtw"
mv ./clamp_80_02/clamp_80_02_"$wtw"/0 ./clamp_80_02/0
mv ./clamp_80_02/clamp_80_02_"$wtw"/900 ./clamp_80_02/900

rm ./log.mapFields
rm ./log.pimpleFoam
rm ./log.clampPimpleFoam


###############################
# enter the loop proper

loopi=2

# Start loop
while [ $loopi -le 601 ]       #1056/2-1          # Number of loops = hours / 4, 96 = day
do
  # to find C4. NR is the line number (there is a header, so the 4 of C4 is row 5), $4 is the fourth column. How to reference the right file...
  wtw=$(awk -F ";" -v loopj="$(($loopi*2-1))" '{if(NR==loopj) print $6;}' ./data/clamp_80_DataTable.csv)

  # Take pre-solved field if U=0
  if $( awk -F ";" -v loopj="$(($loopi*2-1))" '{if(NR==loopj) print $9;}' ./data/clamp_80_DataTable.csv )
  then
    cp -r ./clamp_80_01/zero ./clamp_80_01/$((($loopi-1)*900))

    runApplication mapFields -case ./clamp_80_02 -consistent ./clamp_80_01
    cp ./clamp_80_01/$((($loopi-1)*900))/phi ./clamp_80_02/$((($loopi-1)*900))/phi

    cp -r ./clamp_80_02/$((($loopi-1)*900)) ./clamp_80_02/clamp_80_02_ltr/$((($loopi-1)*900))
    runApplication clampPimpleFoam -case ./clamp_80_02/clamp_80_02_ltr

    mv ./clamp_80_02/clamp_80_02_ltr/$((($loopi)*900)) ./clamp_80_02/$((($loopi)*900))
    rm -r ./clamp_80_02/clamp_80_02_ltr/$((($loopi-1)*900))

    rm ./log.mapFields
    rm ./log.clampPimpleFoam

  else
    # if wtw is same, take latest pU file to right subsubfolder. Otherwise, take 0_orig. I DON'T THINK THAT THIS IS ACTUALLY NEEDED... (WAS CONCERNED ABOUT INLETS, AS THEY ARE MAPPED AS PATCHES IN PARAVIEW)
    if $( awk -F ";" -v loopj="$(($loopi*2-1))" '{if(NR==loopj) print $8;}' ./data/clamp_80_DataTable.csv )
    then
      cp -r ./clamp_80_01/0_orig ./clamp_80_01/clamp_80_01_"$wtw"/$((($loopi-2)*900 + 810))
    else
      cp -r ./clamp_80_01/$((($loopi-2)*900)) ./clamp_80_01/clamp_80_01_"$wtw"/$((($loopi-2)*900 + 810))
    fi

    # run pimpleFoam for one second with dt = 0.001
    rm ./clamp_80_01/clamp_80_01_"$wtw"/system/controlDict
    cp -r ./clamp_80_01/system/controlDict_start ./clamp_80_01/clamp_80_01_"$wtw"/system/controlDict
    runApplication pimpleFoam -case ./clamp_80_01/clamp_80_01_"$wtw"
    rm ./log.pimpleFoam

    # run pimpleFoam with variable timestep
    rm ./clamp_80_01/clamp_80_01_"$wtw"/system/controlDict
    cp -r ./clamp_80_01/system/controlDict ./clamp_80_01/clamp_80_01_"$wtw"/system/controlDict
    #if $( awk -F ";" -v loopj="$(($loopi*2-1))" '{if(NR==loopj) print $7;}' ./data/clamp_80_DataTable.csv )
    #then
    #  sed -i 's/adjustTimeStep  yes/adjustTimeStep  no/' ./clamp_80_01/clamp_80_01_"$wtw"/system/controlDict
    #fi
    runApplication pimpleFoam -case ./clamp_80_01/clamp_80_01_"$wtw"

    mv ./clamp_80_01/clamp_80_01_"$wtw"/$((($loopi-1)*900)) ./clamp_80_01/$((($loopi-1)*900))
    rm -r ./clamp_80_01/clamp_80_01_"$wtw"/$((($loopi-2)*900+810))
    rm -r ./clamp_80_01/clamp_80_01_"$wtw"/$((($loopi-2)*900+811))

    runApplication mapFields -case ./clamp_80_02 -consistent ./clamp_80_01
    cp ./clamp_80_01/$((($loopi-1)*900))/phi ./clamp_80_02/$((($loopi-1)*900))/phi

    cp -r ./clamp_80_02/$((($loopi-1)*900)) ./clamp_80_02/clamp_80_02_"$wtw"/$((($loopi-1)*900))
    runApplication clampPimpleFoam -case ./clamp_80_02/clamp_80_02_"$wtw"

    mv ./clamp_80_02/clamp_80_02_"$wtw"/$((($loopi)*900)) ./clamp_80_02/$((($loopi)*900))
    rm -r ./clamp_80_02/clamp_80_02_"$wtw"/$((($loopi-1)*900))

    rm ./log.mapFields
    rm ./log.pimpleFoam
    rm ./log.clampPimpleFoam

  fi

  loopi=$(($loopi + 1))

  # end loop
done
